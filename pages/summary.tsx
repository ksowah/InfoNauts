import Footer from "../components/footer";
import Head from "next/head";
import Image from "next/image";
import Navbar from "../components/navbar";
import { motion } from "framer-motion";
import { useRouter } from "next/router";
import { useStateValue } from "../context/stateProvider";

const Summary = () => {
  const router = useRouter();
  const [{ cheque }, dispatch] = useStateValue();
  return (
    <div>
      <Head>
        <title>Cheque Summary</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar bg />

      <div className="text-black mt-32 w-full flex flex-col items-center justify-center">
        <h1 className="font-medium text-center md:text-start text-[2rem] md:text-[3rem]">
          Cheque Summary
        </h1>
        <div className="h-[2px] w-20 md:w-52 bg-black"></div>
      </div>
      <div className="flex items-center w-full h-[48rem] md:h-[57rem] justify-center p-4 md:p-20 mt-8 mb-[8rem]">
        <div className="h-full w-full flex items-center bg-[#E2F1F6] p-4 md:p-10">
          <div className="hidden lg:flex h-full flex-1 relative">
            <div className="absolute top-0 bottom-0 left-0 right-0 bg-sky-rgba  z-30"></div>
            <Image
              src={cheque?.url || "/assets/mobile.png"}
              alt="lady holding mobile phone"
              layout="fill"
              objectFit="contain"
            />
          </div>
          <div className="h-full px-8 p-4 md:px-16 md:py-6 flex-1 bg-white">
            <label>
              <p className="text-[0.8rem] text-[#6B7380]">BANK</p>
              <input
                type="text"
                className="outline-none mb-6 w-full border-b-2 border-[#6B7380] p-2"
                readOnly
                value={cheque?.Bank}
              />
            </label>
            <label>
              <p className="text-[0.8rem] text-[#6B7380]">
                RECEIVER&apos;S NAME
              </p>
              <input
                type="text"
                className="outline-none mb-6 w-full border-b-2 border-[#6B7380] p-2"
                readOnly
                value={cheque?.reciepient}
              />
            </label>
            <label>
              <p className="text-[0.8rem] text-[#6B7380]">ACCOUNT NUMBER</p>
              <input
                type="text"
                className="outline-none mb-6 w-full border-b-2 border-[#6B7380] p-2"
                readOnly
                value={cheque?.account_no}
              />
            </label>
            <label>
              <p className="text-[0.8rem] text-[#6B7380]">AMOUNT</p>
              <input
                type="text"
                className="outline-none mb-6 w-full border-b-2 border-[#6B7380] p-2"
                readOnly
                value={cheque?.Amount}
              />
            </label>
            <label>
              <p className="text-[0.8rem] text-[#6B7380]">CHEQUE NUMBER</p>
              <input
                type="text"
                className="outline-none mb-6 w-full border-b-2 border-[#6B7380] p-2"
                readOnly
                value={cheque?.cheque_No}
              />
            </label>
            <label>
              <p className="text-[0.8rem] text-[#6B7380]">DATE ISSUED</p>
              <input
                type="text"
                className="outline-none mb-6 w-full border-b-2 border-[#6B7380] p-2"
                readOnly
                value={cheque?.issued_date}
              />
            </label>
            {cheque ? (
              <>
                <label>
                  <p className="text-[0.8rem] text-[#6B7380]">CHEQUE STATUS</p>
                  <input
                    type="text"
                    className={`outline-none mb-1 w-full border-2
                    ${
                      cheque?.status == "Passed"
                        ? "border-green-500"
                        : "border-red-600"
                    }
                    p-2`}
                    readOnly
                    value={
                      cheque?.status == "Passed" ? "Valid ✔" : "Invalid ❌"
                    }
                  />
                  <small
                    className={`mb-2
                                      ${
                                        cheque?.status == "Passed"
                                          ? "text-green-500"
                                          : "text-red-600"
                                      }`}
                  >
                    {cheque?.status == "Passed"
                      ? "All information on check verified successfully"
                      : "Cheque signature unmatched. Contact the issuer"}
                  </small>
                </label>

                {cheque.status == "Passed" ? (
                  <div className="w-full flex items-center justfiry-center gap-x-5">
                    <motion.button
                      initial={{ opacity: 0, x: 200 }}
                      animate={{ opacity: 1, x: 0 }}
                      exit={{ opacity: 0, x: 200 }}
                      whileHover={{ scale: 1.02 }}
                      className="px-3 py-2 rounded-sm bg-active text-white  mt-1  "
                      onClick={() => router.push("/upload")}
                    >
                      Upload new Cheque
                    </motion.button>
                    <motion.button
                      initial={{ opacity: 0, x: 200 }}
                      animate={{ opacity: 1, x: 0 }}
                      exit={{ opacity: 0, x: 200 }}
                      whileHover={{ scale: 1.02 }}
                      className="px-3 py-2 rounded-sm bg-green-600 text-white  mt-1 "
                      onClick={() => router.push("/confirm")}
                    >
                      Proceed to Cashout
                    </motion.button>
                  </div>
                ) : (
                  <motion.button
                    initial={{ opacity: 0, x: 200 }}
                    animate={{ opacity: 1, x: 0 }}
                    exit={{ opacity: 0, x: 200 }}
                    whileHover={{ scale: 1.02 }}
                    className="px-3 py-2 rounded-sm bg-active text-white  mt-1 w-full "
                    onClick={() => router.push("/upload")}
                  >
                    Upload New Cheque
                  </motion.button>
                )}
              </>
            ) : (
              <>
                <label className="w-full flex items-center justify-center py-3">
                  <p className="text-[1.2rem] text-[#6B7380]">
                    No Cheque Found!
                  </p>
                </label>

                <motion.button
                  initial={{ opacity: 0, x: 200 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: 200 }}
                  whileHover={{ scale: 1.02 }}
                  className="px-3 py-2 rounded-sm bg-active text-white  mt-1 w-full "
                  onClick={() => router.push("/upload")}
                >
                  Upload Cheque
                </motion.button>
              </>
            )}
          </div>
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default Summary;
